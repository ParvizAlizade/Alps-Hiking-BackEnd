@model List<Tour>
@{
    ViewData["Title"] = "Tours Page";
    List<Slider> sliders = ViewBag.Slider;
    List<Category>categories = ViewBag.Categories;
    List<Tour> tours =ViewBag.Tours;
    List<Destiantion> destiantions = ViewBag.Destination;

}


@section Link {
    <link rel="stylesheet" href="~/assets/scss/tours.css">
}

<main style="width:100%;"> 
    <section id="slider">
        <div class="content">
            <div class="image">
                <img src="~/assets/images/SectionImages/@sliders.Find(s=>s.Title=="Our Tours").ImagePath" alt="">
            </div>
            <h1 style="font-size:66px" class="d-lg-block d-md-none d-sm-none">Our Tours</h1>
        </div>
    </section>


    <section id="allsection" style="width:100%;" class="d-flex flex-wrap overflow-hidden">
        <div class="col-lg-4 col-md-4">
            <div class="tour-search">
                <div class="container">
                    <div class="row">
                        <div class="title">
                            <i class="fa-solid fa-magnifying-glass"></i>
                            <h3>Tour Search</h3>
                        </div>

                        <div class="keywords">
                            <h5>Keywords</h5>
                            <form class="form-inline col-lg-12  my-2 my-lg-0"  method='get' target='_blank'>
                                <main class='search'>
                                    <input type='search' aria-label="Search" class='search-input form-control' id="searchh" name='q' placeholder='search'>
                                </main>
                            </form>
                        </div>
                    

                        <form asp-controller="tour" asp-action="index" method="post">
                            <div class="category">
                                <h5>Category</h5>
                                <div class="categories">
                                    @foreach (var category in categories)
                                    {
                                        <input type="checkbox" name="categoirId" value="@category.Id" id="">
                                        <label for="">@category.Name  (@category.Tours.Count)</label>
                                        <br>
                                    }
                                </div>
                            </div>

                            <div class="duration">
                                <h5>Duration</h5>
                                @foreach (Tour item in tours.OrderBy(i => i.DayCount).GroupBy(i => i.DayCount).Select(g => g.First()))
                                {
                                    <input type="checkbox" name="days" value="@item.DayCount" id="">
                                    <label for="">@item.DayCount Day Tour</label>
                                    <br>
                                }
                            </div>

                            @{
                                double maxDiscountedPrice = tours.Max(a => a.DiscountPrice);
                            }
                           
                            <div>
                                <div class="price-input">
                                    <div class="field">
                                        <p  class="mt-3">Min</p>
                                        <input type="number" placeholder="0" name="minprice" class="input-min">
                                    </div>
                                    <div class="separator">-</div>
                                    <div class="field">
                                        <p class="mt-3">Max</p>
                                        <input type="number" placeholder="@(maxDiscountedPrice+200)" name="maxprice" class="input-max">
                                    </div>
                                </div>
                                <div class="slider">
                                    <div class="progress"></div>
                                </div>
                                <div class="range-input">
                                    <input type="range"  class="range-min" min="0" max="@maxDiscountedPrice" step="50">
                                    <input type="range" class="range-max" min="0" max="@(maxDiscountedPrice+200)" step="50">
                                </div>
                            </div>
                            
                            <div class="mt-3 difficulty">
                                <h5>Difficulty</h5>
                                <select style="padding:10px 20px;margin-top:17px;border-color:gray; border-radius:5px" name="difficulty" id="">
                                    <option value="">Difficulty</option>
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                    <option value="6">6</option>
                                    <option value="7">7</option>
                                    <option value="8">8</option>
                                    <option value="9">9</option>
                                    <option value="10">10</option>
                                </select>
                            </div>

                            <div class="rating">
                                <h5>Rating</h5>
                                <select name="rating" id="">
                                    <option value="">Rating</option>
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                    <option value="6">6</option>
                                    <option value="7">7</option>
                                    <option value="8">8</option>
                                    <option value="9">9</option>
                                    <option value="10">10</option>
                                </select>
                            </div>

                            <div class="age">
                                <h5>Age</h5>
                                @foreach (var item in tours.OrderBy(i => i.PassangerAge).GroupBy(i => i.PassangerAge).Select(g => g.First()))
                                {
                                    <input type="checkbox" name="age" value="@item.PassangerAge" id="">
                                    <label for="">@item.PassangerAge+</label>
                                    <br>
                                }

                            </div>

                            <div class="destination">
                                <h5>Destination</h5>
                                <div class="dest" style="height:53vh;overflow-y:scroll;">
                                    @foreach (Destiantion item in destiantions.OrderByDescending(i=>i.Tours.Count).GroupBy(i => i.Name).Select(g => g.First()))
                                    {
                                        <input type="checkbox" name="destiantions" value="@item.Id" id="">
                                        <label for="">@item.Name (@item.Tours.Count)</label>
                                        <br>
                                    }
                                </div>

                            </div>
                            
                            <button class="btn button btn-dark w-75 mt-5">Search</button>
                        </form>
                    </div>

                </div>
            </div>
        </div>

        <div class="col-lg-8 col-md-8">
            <div id="alltours">
                <div class="tours w-100 tab_content d-flex ">
                    <div class="container">
                        <div class="row">
                            @await Html.PartialAsync("_TourPartial",Model)
                            <div id="loadmore" class="d-block">
                                <button class="btn  btn-dark mt-5" id="loadmorebutton">Load More</button>
                            </div>
                        </div>
                        <p style="opacity: 0;" id="not_found"></p>
                    </div>
                </div>
            </div>
        </div>
    </section>

</main>

<style>
    .hedd, .comment {
        display: none;
    }
    .price-input {
        width: 100%;
        display: flex;
        margin: 30px 0 35px;
    }
        .price-input .field {
            display: flex;
            width: 100%;
            height: 45px;
            align-items: center;
        }

    .field input {
        width: 100%;
        height: 100%;
        outline: none;
        font-size: 19px;
        margin-left: 12px;
        border-radius: 5px;
        text-align: center;
        border: 1px solid #999;
        -moz-appearance: textfield;
    }

    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
    }

    .price-input .separator {
        width: 130px;
        display: flex;
        font-size: 19px;
        align-items: center;
        justify-content: center;
    }

    .slider {
        height: 5px;
        position: relative;
        background: #ddd;
        border-radius: 5px;
    }

        .slider .progress {
            height: 100%;
            left: 25%;
            right: 25%;
            position: absolute;
            border-radius: 5px;
            background: #17a2b8;
        }

    .range-input {
        position: relative;
    }

        .range-input input {
            position: absolute;
            width: 100%;
            height: 5px;
            top: -5px;
            background: none;
            pointer-events: none;
            -webkit-appearance: none;
            -moz-appearance: none;
        }

    input[type="range"]::-webkit-slider-thumb {
        height: 17px;
        width: 17px;
        border-radius: 50%;
        background: #17a2b8;
        pointer-events: auto;
        -webkit-appearance: none;
        box-shadow: 0 0 6px rgba(0, 0, 0, 0.05);
    }

    input[type="range"]::-moz-range-thumb {
        height: 17px;
        width: 17px;
        border: none;
        border-radius: 50%;
        background: #17a2b8;
        pointer-events: auto;
        -moz-appearance: none;
        box-shadow: 0 0 6px rgba(0, 0, 0, 0.05);
    }

    .dest::-webkit-scrollbar {
        display: none;
    }

</style>
<script>

    const rangeInput = document.querySelectorAll(".range-input input"),
        priceInput = document.querySelectorAll(".price-input input"),
        range = document.querySelector(".slider .progress");
    let priceGap = 200  ;

    priceInput.forEach((input) => {
        input.addEventListener("input", (e) => {
            let minPrice = parseInt(priceInput[0].value),
                maxPrice = parseInt(priceInput[1].value);

            if (maxPrice - minPrice >= priceGap && maxPrice <= rangeInput[1].max) {
                if (e.target.className === "input-min") {
                    rangeInput[0].value = minPrice;
                    range.style.left = (minPrice / rangeInput[0].max) * 100 + "%";
                } else {
                    rangeInput[1].value = maxPrice;
                    range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + "%";
                }
            }
        });
    });

    rangeInput.forEach((input) => {
        input.addEventListener("input", (e) => {
            let minVal = parseInt(rangeInput[0].value),
                maxVal = parseInt(rangeInput[1].value);

            if (maxVal - minVal < priceGap) {
                if (e.target.className === "range-min") {
                    rangeInput[0].value = maxVal - priceGap;
                } else {
                    rangeInput[1].value = minVal + priceGap;
                }
            } else {
                priceInput[0].value = minVal;
                priceInput[1].value = maxVal;
                range.style.left = (minVal / rangeInput[0].max) * 100 + "%";
                range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + "%";
            }
        });
    });


    document.addEventListener("DOMContentLoaded", function (event) {
        $(".hedd").slice(0, 24).show();
        $("#loadmorebutton").on("click", function (e) {
            e.preventDefault();
            $(".hedd:hidden").slice(0, 9).slideDown();
        });
    });
</script>

@section Scripts {
    <script src="./assets/js/tours.js"></script>
}
